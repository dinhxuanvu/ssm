#!/usr/bin/env python
#
# (C)2011 Red Hat, Inc., Lukas Czerner <lczerner@redhat.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# ssm - System Storage Manager

import os
import sys
import traceback
from ssmlib import problem


# Should we print backtrace on error, or suppress it ?
# Suppress it by default.
try:
    SSM_PRINT_BACKTRACE = os.environ['SSM_PRINT_BACKTRACE']
    if SSM_PRINT_BACKTRACE.upper() in ['YES', 'TRUE', '1']:
        SSM_PRINT_BACKTRACE = True
    else:
        SSM_PRINT_BACKTRACE = False
except KeyError:
    SSM_PRINT_BACKTRACE = False



try:
    from ssmlib import main

    if __name__ == "__main__":
        noroot = ['-h', '--help', '--version']
        if (len(sys.argv) == 2 and sys.argv[1] not in noroot) or \
           (len(sys.argv) >= 3 and sys.argv[2] not in noroot):
            if not os.geteuid() == 0:
                sys.exit("\nRoot privileges required to run this script!\n")
        sys.exit(main.main())
except problem.SsmError, err:
    if SSM_PRINT_BACKTRACE is True:
        traceback.print_exc(file=sys.stdout)
    else:
        print(str(err))
    sys.exit(err.errcode)
